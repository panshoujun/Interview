<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Data.Linq" #>
<#@ assembly name="System.xml" #>
<#@ assembly name="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data.Linq"#>
using System;
namespace MyProject.Entities
{     
      <#
           List<string> notNullArr = new List<string> { "string","byte[]" }; 
           string connectionString = "data source=.;initial catalog=Test;persist security info=True;user id=sa;password=123456;";
           SqlConnection conn = new SqlConnection(connectionString);
           conn.Open();
           System.Data.DataTable schema = conn.GetSchema("TABLES");
           string selectQuery = "select * from @tableName";
           string colArrSQL = @"
            select a.name colname,d.name tablename,b.name coltype,g.value remark  from syscolumns a 
            left join systypes b on a.xusertype=b.xusertype
            inner join sysobjects d on a.id=d.id and d.xtype='U' and d.name<>'dtproperties'
            left join  sys.extended_properties g on  a.id=g.major_id and a.colid=g.minor_id";
           SqlCommand command = new SqlCommand(selectQuery,conn);
           SqlDataAdapter ad = new SqlDataAdapter(command);
           System.Data.DataSet ds = new DataSet();   
           command.CommandText = colArrSQL;
        ad.Fill(ds);
        System.Data.DataTable dt = ds.Tables[0];
           foreach(System.Data.DataRow row in schema.Rows)
           {  
             string tb_name=row["TABLE_NAME"].ToString().Trim('s');
           #>  
           public class <#= row["TABLE_NAME"].ToString().Trim('s') #>                   
           {    <#                     
                  ds.Tables.Clear();
                  command.CommandText = selectQuery.Replace("@tableName",row["TABLE_NAME"].ToString());
                  ad.FillSchema(ds, SchemaType.Mapped, row["TABLE_NAME"].ToString());         
                  foreach (DataColumn dc in ds.Tables[0].Columns)
                  {    
                  
                    var colname = dc.ColumnName;
                    var rows=dt.Select($"tablename = '{tb_name}' and colname = '{colname}' ").FirstOrDefault();
                    var remark="";
                    if(rows!=null&&rows["remark"]!=null)
                    {
                        remark=rows["remark"].ToString();
                    } 
                #>  
                /// <summary>
                /// <#= remark #>
                /// </summary>
                 public <#= dc.DataType.Name+(dc.AllowDBNull  && !notNullArr.Contains(dc.DataType.Name.ToLower())? "? ": " ") #> <#= colname #> { get; set; }                                                                                           
              <# }  #>         
           }                  
           <# 
           } #>                
}