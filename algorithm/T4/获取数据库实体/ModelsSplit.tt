<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@include file="..\文件分割\MultipleOutputHelper.ttinclude"#>

<#
List<string> notNullArr = new List<string> { "string","byte[]" };
string connectionString = "data source=.;initial catalog=Test;persist security info=True;user id=sa;password=123456;";
SqlConnection conn = new SqlConnection(connectionString);
conn.Open();
System.Data.DataTable schema = conn.GetSchema("TABLES");
string selectQuery = "select * from @tableName";

string colArrSQL = @"
select a.name colname,d.name tablename,b.name coltype,g.value remark  from syscolumns a 
left join systypes b on a.xusertype=b.xusertype
inner join sysobjects d on a.id=d.id and d.xtype='U' and d.name<>'dtproperties'
left join  sys.extended_properties g on  a.id=g.major_id and a.colid=g.minor_id";

string tableArrSQL=@"SELECT tablename = case when a.colorder = 1 then d.name else '' end, 
       tableremark = case when a.colorder = 1 then isnull(f.value, '') else '' end
FROM syscolumns a 
inner join sysobjects d on a.id = d.id and d.xtype = 'U' and d.name <> 'sys.extended_properties'
left join sys.extended_properties  f on a.id = f.major_id and f.minor_id = 0
Where (case when a.colorder = 1 then d.name else '' end) <>''";

tableArrSQL=@"SELECT distinct d.name tablename,f.value tableremark FROM syscolumns a 
inner join sysobjects d on a.id = d.id and d.xtype = 'U'  and d.name <> 'sys.extended_properties'
left join sys.extended_properties   f on a.id = f.major_id and f.minor_id = 0";

SqlCommand command = new SqlCommand(selectQuery,conn);
SqlDataAdapter ad = new SqlDataAdapter(command);
System.Data.DataSet ds = new DataSet();  

command.CommandText = colArrSQL;
ad.Fill(ds);
System.Data.DataTable dt = ds.Tables[0];

command.CommandText = tableArrSQL;
ds.Tables.Clear();
ad.Fill(ds);
System.Data.DataTable dtTable = ds.Tables[0];


var manager = Manager.Create(Host, GenerationEnvironment);  
foreach(System.Data.DataRow row in schema.Rows)
{  

    string tbname=row["TABLE_NAME"].ToString().Trim('s');
    var tbRows=dtTable.Select($"tablename = '{tbname}' ").FirstOrDefault();
    var tbRemark="";
    if(tbRows!=null&&tbRows["tableremark"]!=null)
    {
        tbRemark=tbRows["tableremark"].ToString();
    }
    manager.StartNewFile(tbname+".cs");
#>

    using System;
    using System.Collections.Generic;
    namespace Models
    {     
        /// <summary>
        /// <#= tbRemark #>
        /// </summary>
        public partial class <#= tbname #>                   
        {    
            <#                     
            ds.Tables.Clear();
            command.CommandText = selectQuery.Replace("@tableName",tbname);
            ad.FillSchema(ds, SchemaType.Mapped, row["TABLE_NAME"].ToString());     
            foreach (DataColumn dc in ds.Tables[0].Columns)
            {   
                var colname = dc.ColumnName;
                var rows=dt.Select($"tablename = '{tbname}' and colname = '{colname}' ").FirstOrDefault();
                var remark="";
                if(rows!=null&&rows["remark"]!=null)
                {
                    remark=rows["remark"].ToString();
                }

            #>          
            /// <summary>
            /// <#= remark #>
            /// </summary>
            public <#= dc.DataType.Name+(dc.AllowDBNull  && !notNullArr.Contains(dc.DataType.Name.ToLower())? "? ": " ") #> <#= colname #> { get; set; }                                              
            <# 
            }#>         
        }    
    }        
<#
manager.EndBlock();    
}            
conn.Close();  
manager.Process(true);  
#> 

